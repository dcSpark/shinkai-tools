{"type":"Python","content":[{"version":"1.0.0","name":"arxiv-download","homepage":null,"author":"@@official.shinkai","mcp_enabled":null,"py_code":"# /// script\n# dependencies = [\n#   \"requests\",\n#   \"arxiv>=1.4.7\",\n#   \"pymupdf4llm\",\n#   \"pathlib\"\n# ]\n# ///\n\nimport arxiv\nimport requests\nimport json\nimport pymupdf4llm\nfrom pathlib import Path\nfrom typing import Dict, Any\n\nclass CONFIG:\n    storage_folder: str = \"arxiv_papers\"\n\nclass INPUTS:\n    paper_id: str  # e.g. \"2101.00001\"\n    convert_to_md: bool = True\n\nclass OUTPUT:\n    status: str\n    message: str\n    md_file: str\n\nasync def run(c: CONFIG, p: INPUTS) -> OUTPUT:\n    \"\"\"\n    Download a paper from arXiv by ID, store as PDF in the storage folder, optionally convert to .md\n    \"\"\"\n    folder = Path(c.storage_folder)\n    folder.mkdir(parents=True, exist_ok=True)\n\n    # if we already have .md for that paper, skip\n    md_path = folder / f\"{p.paper_id}.md\"\n    if md_path.exists():\n        out = OUTPUT()\n        out.status = \"exists\"\n        out.message = f\"Paper {p.paper_id} already downloaded/converted.\"\n        out.md_file = str(md_path)\n        return out\n\n    # otherwise, we do the download\n    search = arxiv.Search(id_list=[p.paper_id])\n    client = arxiv.Client()\n    try:\n        paper = next(client.results(search))\n    except StopIteration:\n        out = OUTPUT()\n        out.status = \"error\"\n        out.message = f\"Paper not found: {p.paper_id}\"\n        out.md_file = \"\"\n        return out\n\n    # Download PDF\n    pdf_path = folder / f\"{p.paper_id}.pdf\"\n    if not pdf_path.exists():\n        paper.download_pdf(dirpath=str(folder), filename=pdf_path.name)\n\n    # Optionally convert\n    if p.convert_to_md:\n        # Convert using pymupdf4llm\n        try:\n            markdown_text = pymupdf4llm.to_markdown(str(pdf_path), show_progress=False)\n            md_path.write_text(markdown_text, encoding='utf-8')\n            # remove pdf if you want\n            # pdf_path.unlink()\n        except Exception as e:\n            out = OUTPUT()\n            out.status = \"error\"\n            out.message = f\"Conversion failed: {str(e)}\"\n            out.md_file = \"\"\n            return out\n\n    out = OUTPUT()\n    out.status = \"success\"\n    out.message = f\"Paper {p.paper_id} downloaded successfully.\"\n    out.md_file = str(md_path) if p.convert_to_md else \"\"\n    return out ","tools":[],"config":[{"BasicConfig":{"key_name":"storage_folder","description":"Where to store PDFs/MD outputs","required":false,"type":null,"key_value":null}}],"description":"Download an arXiv paper PDF and optionally convert it to Markdown","keywords":["arxiv","pdf","download","markdown","research","paper"],"input_args":{"type":"object","properties":{"paper_id":{"type":"string","description":"ArXiv paper ID to download"},"convert_to_md":{"type":"boolean","description":"Whether to convert the downloaded PDF to .md"}},"required":["paper_id"]},"output_arg":{"json":""},"activated":false,"embedding":[-0.067786105,0.33058065,-0.12429309,-0.055891074,0.096184,-0.12393168,-0.7105342,-0.36189914,0.102712266,-0.8436404,0.5556672,0.5577595,0.3625899,0.35815278,0.42113018,-0.6818193,-0.11573054,-0.7424082,-0.60234296,0.18167177,-0.04952231,1.1282023,0.14216967,0.14116636,0.48386204,-0.19568565,0.23362532,-0.4370243,-1.242942,-2.24562,0.37835386,0.16886973,-0.54831487,-0.09061133,0.307891,-0.8606393,-0.11665379,0.22942525,0.12958667,-0.16314444,0.14197318,-0.18991889,0.4264402,-0.2633929,0.95013666,-0.25033012,0.029845681,0.039253548,0.64739245,0.07063959,-0.54201823,-0.12821698,0.097044304,-0.22618034,-0.32544255,0.019315094,0.45795217,0.03366516,0.045594215,0.33559445,0.2870059,0.5987043,-4.281547,0.433544,0.57773036,0.595925,0.32097948,-0.06404911,-0.12962736,-0.15185891,0.2485784,-0.10423307,-0.2783639,0.0017800182,-0.50128835,-0.54721636,-0.1804334,0.2912913,-0.19296496,-0.2388692,-0.43706417,0.27103108,0.4226115,0.22522427,-0.57208115,0.50244105,-0.38312805,-0.56275386,0.79428756,-0.03589896,-0.046898555,-0.28929472,-0.21644355,0.36908555,-0.26794243,0.35788906,0.17138147,0.06592979,-0.41352236,3.3611722,0.4111454,-0.13281836,1.1702571,-0.5667192,-0.40319815,-0.5466147,-0.30530885,-0.2633125,-0.15740016,0.29017302,0.51106626,-0.9447367,-0.4114543,-0.10866271,-0.21918993,-0.09200781,-0.4134977,-0.14386378,0.052976232,0.25706792,-1.1713634,0.5694308,-0.44003484,-0.43752354,0.36626878,0.080665015,-0.25482756,0.31582105,0.42085618,-0.16224854,-0.16155484,-0.1821685,-0.25267354,0.19246586,0.06560257,0.042878628,0.9574874,-0.36965168,0.17051017,-0.11392002,0.13240492,-0.86565846,0.76008785,0.257657,0.65140796,0.14929798,-0.1993283,0.68414724,-0.5321136,-0.10827504,-0.067317545,0.007501349,-0.09921342,-0.27198327,0.91875046,-0.14041656,-0.11964828,0.06596999,-0.01699587,0.4764517,0.1156531,-0.61107975,0.30132222,0.94863117,0.0012699142,0.018994965,0.16424231,-0.07884212,0.7789991,0.3134472,0.36784217,-0.3539007,0.36667377,-0.14414465,0.30272457,0.44433153,-0.08584817,-0.6010547,0.17423254,-0.633554,0.53736436,0.3047032,-0.04362159,-0.30951646,0.22510548,0.47175223,0.32313105,-0.020162016,0.63879436,0.5815071,-0.4592007,1.8245251,-1.682747,-0.6310841,-0.46535558,0.04923401,0.24239863,0.272165,0.59672344,-0.5733812,-0.67291224,-0.124674186,0.5420123,0.44263685,0.26526746,-0.5881889,0.43357506,0.17397702,-0.09201698,-0.3846936,-0.13769491,-0.30421668,0.93135464,0.7413322,0.082273185,0.074802846,-0.118359,0.082584344,0.20771565,0.3050494,0.007306434,0.13839571,-0.52658856,-0.506489,-0.4841845,0.15932018,0.10298135,0.0029463526,-0.20101123,-0.24809425,0.2960624,0.16805744,0.63106495,1.0704718,0.3384028,-0.2610139,-0.43838477,0.26707244,0.011038765,-0.71298826,0.6915863,-0.046870515,-0.105023816,-0.5048261,-0.075114995,-0.8459444,-0.13571116,0.47140366,-0.13073722,1.6271086,0.39325932,-0.5048417,0.7160407,0.068848714,-0.109133266,0.27048606,-1.8294212,-0.04795944,-0.024712332,0.45039558,-0.07277213,0.44601166,0.36674657,0.38744685,-0.14349788,-0.41300452,-0.7696947,-0.33740014,0.0024354681,-0.15619917,-0.11302969,0.48404735,0.40579563,0.24809575,-0.028306378,0.46183047,0.98177826,-0.30591527,-0.46412468,-0.7084519,-0.13180283,0.052932717,0.24368247,0.037802882,-0.49099588,0.07917451,0.35562316,0.0074483305,0.056614447,-0.32148546,-0.09050736,0.042026132,0.12998477,0.18272285,1.9262817,0.041409794,0.0339529,0.1966249,-0.75421053,0.6176699,-0.0117920935,-0.10913708,-0.20471051,-0.054361492,-1.0273719,0.11346344,0.3024696,-0.5999732,0.074522674,0.40881068,-0.2947634,-0.580375,-0.03521846,-0.17550501,0.4778819,-0.60294884,-0.25007164,0.29138267,-0.35436574,-1.5701337,-0.67995477,0.015652703,0.5006475,-0.46062267,-0.5903783,0.8654425,0.2838008,0.21356484,-0.23217066,1.7159786,0.47931796,0.16167863,-0.517003,-0.050568935,0.7516798,-0.2478182,0.7703648,-0.4500131,-0.8787121,0.012288853,0.5816487,1.636646,-0.14739427,-0.33827862,-0.22898693,-0.028664865,-1.5327153,-0.8712364,0.07466161,-0.06344025,-0.15739715,0.40004885,-0.42446792,-0.11896031,1.09854,1.0057102,-0.23868842,0.10457818,-0.1773111,2.3200417,-0.43597442,-0.31120095,0.091233574,-0.0020081904,-0.25684178,0.17773962,-0.34200382,-0.8080929,-0.24113843,-0.017441273,0.2580859,-0.56872773,0.70522106,0.20322943,0.2521513,0.07293405,-0.2726594,0.87950635,0.7795158,0.06570886,0.26806596,-0.54724157,-0.6584182,-0.06519993],"result":{"type":"object","properties":{"md_file":{"type":"string"},"message":{"type":"string"},"status":{"type":"string"}},"required":["status","message"]},"sql_tables":null,"sql_queries":null,"file_inbox":null,"oauth":null,"assets":null,"runner":"any","operating_system":["linux","macos","windows"],"tool_set":""},false]}