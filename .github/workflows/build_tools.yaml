name: Build Shinkai Tools

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        default: "development"

jobs:
  build_tools:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'development' }}
    permissions:
      contents: write

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq zip unzip coreutils

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install b3sum
        run: cargo install b3sum

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Run node in background
        id: run_node
        env:
          INITIAL_AGENT_NAMES: ${{ secrets.INITIAL_AGENT_NAMES }}
          INITIAL_AGENT_URLS: ${{ secrets.INITIAL_AGENT_URLS }}
          INITIAL_AGENT_MODELS: ${{ secrets.INITIAL_AGENT_MODELS }}
          INITIAL_AGENT_API_KEYS: ${{ secrets.INITIAL_AGENT_API_KEYS }}
          IDENTITY_SECRET_KEY: ${{ secrets.IDENTITY_SECRET_KEY }}
          ENCRYPTION_SECRET_KEY: ${{ secrets.ENCRYPTION_SECRET_KEY }}
          GLOBAL_IDENTITY_NAME: ${{ vars.GLOBAL_IDENTITY_NAME }}
          API_V2_KEY: ${{ secrets.API_V2_KEY }}
          EMBEDDINGS_SERVER_URL: ${{ secrets.EMBEDDINGS_SERVER_URL }}
          SHINKAI_NODE_ADDR: "http://localhost:9550"
          BEARER_TOKEN: ${{ secrets.API_V2_KEY }}
          INITIALIZATION_DATA: ${{ secrets.INITIALIZATION_DATA }}
          DOWNLOAD_PREFIX: ${{ vars.DOWNLOAD_PREFIX }}
          SKIP_IMPORT_FROM_DIRECTORY: true
          SHINKAI_STORE_ADDR: ${{ vars.SHINKAI_STORE_ADDR }}
          SHINKAI_STORE_TOKEN: ${{ secrets.SHINKAI_STORE_TOKEN }}
          USE_DOCKER: true
          SHINKAI_NODE_IMAGE: "dcspark/shinkai-node:release-latest"
        run: |
          ./scripts/run_node.sh &
          timeout 60 bash -c 'until curl -s --location "$SHINKAI_NODE_ADDR/v2/health_check" | jq -e ".status == \"ok\"" > /dev/null; do sleep 1; done'
          curl --location "$SHINKAI_NODE_ADDR/v2/initial_registration" \
            --header 'Content-Type: application/json; charset=utf-8' \
            --data "$INITIALIZATION_DATA"
          rm -rf ./packages && mkdir ./packages
          sleep 10
          export NODE_VERSION=$(curl -s "${SHINKAI_NODE_ADDR}/v2/health_check" | jq -r '.version')
          echo "NODE_VERSION=$NODE_VERSION" >> $GITHUB_ENV
          deno run --allow-read --allow-write --allow-env --allow-net --allow-run scripts/build_tools.ts
