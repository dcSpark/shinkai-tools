{"type":"Python","content":[{"version":"1.0.0","name":"PubMed Search","homepage":null,"author":"@@official.shinkai","mcp_enabled":null,"py_code":"# /// script\n# requires-python = \">=3.10,<3.12\"\n# dependencies = [\n#   \"biopython==1.81\",\n#   \"requests>=2.31.0\"\n# ]\n# ///\n\nimport os\nimport asyncio\nfrom typing import Optional\nfrom Bio import Entrez\n\nclass CONFIG:\n    entrez_email: Optional[str] = None\n\nclass INPUTS:\n    query: str\n    max_results: int = 15\n\nclass OUTPUT:\n    status: str\n    query: str\n    message: str\n    total_results: int\n    showing: int\n    records: str\n\nasync def run(c: CONFIG, p: INPUTS) -> OUTPUT:\n    \"\"\"\n    Searches PubMed for the specified query using the Entrez API, returning MEDLINE text records.\n\n    Args:\n        c: Configuration object. \n           `entrez_email` can be provided here or in environment var `ENTREZ_EMAIL`.\n        p: Input parameters including 'query' and optionally 'max_results'.\n\n    Returns:\n        OUTPUT: The search result in a structured format.\n    \"\"\"\n    # Determine the email from config or environment\n    email = c.entrez_email or os.getenv(\"ENTREZ_EMAIL\")\n    if not email:\n        raise ValueError(\"No Entrez email provided. Either set `ENTREZ_EMAIL` env var or pass it in the configuration.\")\n\n    # Configure Entrez\n    Entrez.email = email\n\n    if not p.query.strip():\n        raise ValueError(\"Query string cannot be empty.\")\n\n    max_results = max(1, min(p.max_results, 15))\n\n    try:\n        # Search for IDs\n        handle = Entrez.esearch(\n            db=\"pubmed\",\n            term=p.query,\n            retmax=max_results\n        )\n        results = Entrez.read(handle)\n        handle.close()\n\n        # If no results found\n        if not results.get(\"IdList\"):\n            out = OUTPUT()\n            out.status = \"no_results\"\n            out.query = p.query\n            out.message = f\"No results found for '{p.query}'\"\n            out.total_results = 0\n            out.showing = 0\n            out.records = \"\"\n            return out\n\n        id_list = results[\"IdList\"]\n        id_string = \",\".join(id_list)\n        total = int(results.get(\"Count\", \"0\"))\n\n        # Fetch MEDLINE records\n        fetch_handle = Entrez.efetch(\n            db=\"pubmed\",\n            id=id_string,\n            rettype=\"medline\",\n            retmode=\"text\"\n        )\n        medline_data = fetch_handle.read()\n        fetch_handle.close()\n\n        out = OUTPUT()\n        out.status = \"success\"\n        out.query = p.query\n        out.message = \"OK\"\n        out.total_results = total\n        out.showing = len(id_list)\n        out.records = medline_data\n        return out\n\n    except Exception as e:\n        out = OUTPUT()\n        out.status = \"error\"\n        out.query = p.query\n        out.message = str(e)\n        out.total_results = 0\n        out.showing = 0\n        out.records = \"\"\n        return out ","tools":[],"config":[{"BasicConfig":{"key_name":"entrez_email","description":"Email address for Entrez usage. If not provided, must be set in the environment variable ENTREZ_EMAIL.","required":false,"type":null,"key_value":null}}],"description":"Search PubMed for scientific/medical literature and return MEDLINE records.","keywords":["pubmed","literature","medical","shinkai"],"input_args":{"type":"object","properties":{"query":{"type":"string","description":"Search query for PubMed"},"max_results":{"type":"number","description":"Maximum results to fetch (1-15)"}},"required":["query"]},"output_arg":{"json":""},"activated":false,"embedding":[0.42270273,0.14400604,0.39359978,0.19138151,-0.101124495,-0.01746492,-0.64526725,0.10803044,0.074319966,-0.11229569,-0.31329834,0.21105127,-0.12582909,0.10663842,0.43953547,-0.12492564,0.16521336,-0.39873725,-1.746989,-0.40920892,0.12011963,0.8301647,0.082431965,0.010921724,0.522829,-0.59876263,-0.5844402,-0.07109064,-0.86559343,-2.020297,-0.0886684,0.66789585,-0.23327655,-0.38972086,-0.044461913,-0.19852689,0.3824267,0.26819247,-0.571642,0.32478285,-0.09558403,0.035091847,-0.04168823,0.29107106,-0.079666495,-0.31544742,0.14881094,-0.15781584,1.1190788,0.78763855,-0.7573627,-0.6882258,0.20104897,0.3093828,-0.70464,0.1690549,-0.42154187,-0.044238146,0.29871127,-0.15168217,-0.35881156,0.33640826,-4.3434124,-0.13914572,0.48132384,0.41593948,0.08797792,-0.18981397,0.14208159,-0.24262726,0.43257028,-0.047795452,0.5015716,0.01752669,-0.11302169,-0.78232276,0.43457636,-0.34216595,0.99431884,-0.48971465,-0.5588663,0.29248226,-0.7762343,-0.33636132,-0.6744817,0.31282353,-0.64530355,0.25447145,-0.027097262,0.019433945,-0.30628592,-0.409004,0.4140662,0.26291496,0.16527021,0.45633072,-0.04824849,0.5780332,0.5878067,2.9908404,0.662889,0.31296873,0.49405864,-0.13359839,0.015152611,-0.51462907,0.37931058,-0.68557554,0.44728982,0.3582851,-0.31695068,0.16581875,0.3552239,-0.16172382,0.40661934,0.17676976,-0.45822322,0.23099326,0.013946993,0.12969083,-0.878033,0.110583454,0.16554192,0.032482624,-0.067568496,0.5145515,-0.01557865,0.1994149,0.26429766,-0.38999474,0.33641803,0.36736682,-1.094466,0.1564312,-0.56266516,0.254069,0.73371625,-0.35080042,-0.067072466,-0.9724497,-0.051598728,-1.2719879,1.1222421,0.69326246,1.1243409,0.32689953,-0.83928674,0.0029102713,-0.29521474,-0.3639619,-0.23735921,0.67370087,0.16684625,0.090037525,0.7675132,0.17118883,-0.39235532,-0.15084158,0.02223263,0.02729351,-0.73407155,-0.08169991,0.7690274,0.9974959,0.08672156,-0.08291493,0.37398577,0.23470587,0.47838902,0.08502895,-0.19822568,-0.23077363,0.5233977,0.11403826,-0.45259377,0.46505344,-0.14529848,-0.3782305,-0.062433403,-0.6107839,0.15870035,0.9377104,0.105252475,0.0991107,-0.31963092,0.22752143,0.29217276,-0.13173142,0.7893958,1.1917322,-0.60961974,1.1805003,-0.7556183,-0.39428756,0.22329795,0.09199657,-0.2062777,0.22830983,0.45849943,0.1004155,0.06177593,0.14740099,-0.023849294,0.016223468,-0.28330332,-0.14914775,-0.032876313,-0.77504706,0.47720665,-0.47376195,-0.10411751,-0.03898427,0.21841519,0.51512194,0.3554237,0.51064515,0.24699634,-0.29728177,0.22347519,0.7393358,-0.09397227,0.4460291,-0.32291532,-0.5992201,-0.20682107,0.1949951,0.10117217,-0.462807,-0.18419428,-0.19441517,0.45535505,1.1145293,0.18839604,0.3710134,0.8301191,0.072000064,0.75545406,-0.5507096,0.7111161,-0.24996676,-0.11411012,0.017061256,-0.5705196,-0.25778103,0.29186141,-0.14800553,0.4427945,0.41820616,0.29631647,1.4095755,0.92761946,-0.04834808,0.25842848,-0.035647925,0.149108,0.17059797,-1.2409024,-0.5061858,-0.4696993,0.91390526,0.21817318,-0.102080174,0.46439812,0.28843728,0.0041690944,-0.13989039,-0.82291204,-0.6208123,0.25166157,-0.2282432,-0.36552003,0.22794051,-0.07312877,0.2230945,0.13567258,-0.32153323,0.33483616,-0.009164669,-0.69058484,-0.7374504,0.19429037,-0.27080384,0.07521264,0.38848585,-0.7423367,0.3240954,0.07541047,-0.04865253,-0.6776392,-0.028978284,-0.44311514,-0.12534618,-0.51555455,0.2886502,2.0674255,-0.072174996,0.5363961,0.59087175,-0.61824954,0.42465925,-0.026597895,-0.68685645,-0.12562658,0.76957864,0.008791417,-0.5734699,0.43697017,-0.06012614,-0.19017494,0.063780546,-0.18296659,-0.13430066,0.39609647,-0.31028405,0.3527357,-1.0497977,-0.008206274,-0.071471766,-0.26112035,-2.3938653,0.14058854,0.15435416,0.37885615,-0.34788096,-0.68743354,0.27279902,-1.043309,0.041729286,-0.51664764,0.9746978,-0.13487847,-0.48351943,-0.22224216,-0.2668762,0.25556684,-0.7993693,0.10965073,-0.18340495,-1.1064427,-0.1738457,-0.07032928,1.7570336,0.5533709,0.5323901,0.23180252,0.029958654,-0.90393716,-0.6672058,0.180857,0.51620615,-0.19975111,0.46024126,0.12848476,-0.12184707,0.38975427,1.1463009,0.08819857,0.2878176,-0.056673635,1.8332576,-0.09879136,-0.16547027,-0.6504063,-0.066856295,-0.097706586,0.2351063,-0.06971432,-0.4405661,0.35964686,0.03828195,0.36252788,-0.9187289,0.14296873,0.07379909,0.16953644,0.6616963,0.28022265,0.9284508,0.3304704,0.072657436,0.0055908337,-0.80201703,-0.53781295,0.28514916],"result":{"type":"object","properties":{"message":{"type":"string"},"query":{"type":"string"},"records":{"type":"string"},"showing":{"type":"number"},"status":{"type":"string"},"total_results":{"type":"number"}},"required":["status","query"]},"sql_tables":null,"sql_queries":null,"file_inbox":null,"oauth":null,"assets":null,"runner":"any","operating_system":["linux","macos","windows"],"tool_set":""},false]}