{"type":"Python","content":[{"version":"1.0.0","name":"arxiv-search","homepage":null,"author":"@@official.shinkai","mcp_enabled":null,"py_code":"# /// script\n# dependencies = [\n#   \"requests\",\n#   \"arxiv>=1.4.7\",\n#   \"python-dateutil\"\n# ]\n# ///\n\nimport arxiv\nimport json\nfrom typing import List, Dict, Any\nfrom dateutil import parser\n\nclass CONFIG:\n    # For this tool, we don't strictly need configuration fields,\n    # but we can keep them if you plan to store e.g. environment variables.\n    pass\n\nclass INPUTS:\n    query: str  # The search query string\n    max_results: int = 10\n    date_from: str = \"\"\n    date_to: str = \"\"\n    categories: List[str] = []  # A list of category strings\n\nclass OUTPUT:\n    papers: List[Dict[str, Any]]\n    total_results: int\n\nasync def run(c: CONFIG, p: INPUTS) -> OUTPUT:\n    \"\"\"\n    Search for papers on arXiv with advanced filtering.\n    \"\"\"\n    # For safety, clamp max_results\n    max_results = max(1, min(p.max_results, 50))\n\n    # If categories were provided, combine them into a single query\n    search_query = p.query.strip()\n    if p.categories:\n        cat_filter = \" OR \".join(f\"cat:{cat.strip()}\" for cat in p.categories)\n        search_query = f\"({search_query}) AND ({cat_filter})\"\n\n    search = arxiv.Search(\n        query=search_query,\n        max_results=max_results,\n        sort_by=arxiv.SortCriterion.SubmittedDate\n    )\n\n    # Date filters\n    date_from = None\n    date_to = None\n\n    # Attempt to parse date range if provided\n    if p.date_from:\n        try:\n            date_from = parser.parse(p.date_from)\n        except Exception as e:\n            # not fatal, just ignore\n            pass\n\n    if p.date_to:\n        try:\n            date_to = parser.parse(p.date_to)\n        except Exception as e:\n            pass\n\n    papers = []\n    client = arxiv.Client()\n    count = 0\n\n    def is_within(date, start, end):\n        if not date:\n            return True\n        if start and date < start:\n            return False\n        if end and date > end:\n            return False\n        return True\n\n    for result in client.results(search):\n        if is_within(result.published, date_from, date_to):\n            short_id = result.get_short_id()\n            # Convert authors and categories to lists before adding to dictionary\n            authors_list = [str(a.name) for a in result.authors]\n            categories_list = list(result.categories)\n            \n            papers.append({\n                \"id\": short_id,\n                \"title\": result.title,\n                \"authors\": authors_list,  # Now explicitly a list of strings\n                \"abstract\": result.summary,\n                \"published\": result.published.isoformat(),\n                \"categories\": categories_list,  # Now explicitly a list\n                \"pdf_url\": result.pdf_url\n            })\n            count += 1\n            if count >= max_results:\n                break\n\n    out = OUTPUT()\n    out.papers = papers\n    out.total_results = len(papers)\n    return out ","tools":[],"config":[],"description":"Search for papers on arXiv with optional date range and category filters","keywords":["arxiv","search","papers","research","academic","scientific"],"input_args":{"type":"object","properties":{"date_from":{"type":"string","description":"Earliest publication date in a parseable date string (optional)"},"date_to":{"type":"string","description":"Latest publication date in a parseable date string (optional)"},"max_results":{"type":"number","description":"Maximum number of results to return"},"categories":{"type":"array","description":"List of category filters (e.g. [cs.LG])","items":{"type":"string","description":"Category filter"}},"query":{"type":"string","description":"Search query string"}},"required":["query"]},"output_arg":{"json":""},"activated":false,"embedding":[0.34901968,0.88449985,-0.37315136,-0.22074011,-0.17693025,-0.5346256,-0.085756496,-0.79092026,-0.17414518,-0.3472268,-0.26362523,0.33754826,0.31203067,0.18265876,0.64107454,-0.028511427,0.14006147,-0.094981104,-1.1789219,0.08261123,0.5301732,0.7400084,0.23045999,0.13491616,0.19039696,0.007894404,-0.19620338,0.019234352,-0.85318476,-2.32241,0.09561448,-0.015549153,-0.6016006,-0.13521507,0.008861013,-0.6802745,-0.22172,0.21147303,-0.09121838,-0.36714172,0.199868,0.39185384,0.01380118,-0.053680785,0.42280295,-0.36689937,-0.06710862,-0.28025705,1.024844,0.32592613,-0.46848702,-0.035733066,-0.55634636,-0.0677469,-0.26254356,0.12110275,0.28292257,0.028147768,-0.15256149,0.2446356,0.5425612,0.6953495,-4.3513184,0.4689257,0.1329676,0.26608625,0.3130056,-0.030327175,-0.049451917,0.2022646,0.010833815,0.10128605,-0.19615689,0.21984038,-0.3293705,-0.120964915,0.13581333,0.19450739,0.10646378,-0.2587424,-0.3303723,-0.07290442,-0.014952486,0.18310729,-0.31859452,0.45696586,-0.7559134,0.11434284,0.43323556,-0.22312643,0.0060879104,-0.12925297,0.04533446,-0.03540148,-0.19530854,0.29077393,-0.08640596,0.052118532,0.29440957,3.5910604,0.7576235,0.13268402,0.92964894,-0.45637223,0.39377683,-0.63052905,-0.5085014,-0.21376933,-0.26464146,0.09889105,-0.13309346,-0.6395032,0.12720524,-0.4358066,0.1294265,0.5111971,-0.46253598,-0.11878529,-0.53466564,0.26325887,-1.0486884,0.14913082,-0.086460955,-0.13215017,0.19018197,-0.006234303,-0.43746123,0.28309113,0.04936007,-0.39929464,0.1523552,-0.22524285,-0.5680991,-0.11933829,0.13461559,-0.0017115101,0.6124657,-0.4080201,0.33577532,-0.5575399,-0.012789205,-1.2490256,1.2743123,-0.22990063,0.92461157,0.20273536,-0.65937656,0.346832,-0.79732364,0.005530849,-0.09170158,0.3376218,0.20609456,0.095517755,1.3229071,-0.4090869,-0.30362844,-0.077717364,-0.37960637,0.0495065,0.078414604,-0.46560323,0.96736413,1.1422349,0.052080147,-0.22328053,0.34835064,0.3449099,0.41219464,-0.19420826,0.30162597,-0.1258829,0.5838957,0.71442974,-0.037347693,0.5684798,-0.20454773,0.004869394,0.519232,-0.70075,0.24538903,0.46549448,-0.07614231,-0.28289258,-0.07307994,0.37113118,0.37126768,-0.11620443,0.42133904,0.74783635,-0.5874047,1.7295505,-1.3365698,-0.8081498,-0.2308899,0.023911938,-0.21754289,0.31728876,0.61936426,-0.037763145,-0.45109016,0.06269564,-0.053358417,0.5687914,0.25461283,-0.6491645,0.4708566,-0.20687115,0.1269065,-0.36003706,0.14326969,0.08200499,-0.012014873,0.2036688,0.3166951,0.80922973,0.21850927,-0.018039692,0.33383337,0.6962007,-0.17401373,0.17991605,-0.22068639,-0.6214401,-0.34641182,-0.08506484,-0.31600457,-0.38397586,0.09569453,-0.1607945,0.3568507,-0.022229766,1.0675079,0.549559,0.25683025,-0.19927442,-0.06624355,0.12783328,0.48078498,-0.6999058,0.71796376,-0.069361076,-0.3001532,-0.45198,0.34698942,-0.41200218,-0.02772481,0.16459277,-0.20053536,1.5930471,0.5429602,-0.55472237,0.12052174,-0.01976978,-0.4014017,0.059174486,-1.531336,0.15687877,0.053942256,0.52877754,0.022393197,0.099283375,0.42003715,0.17581598,-0.0428889,-0.37836346,-0.3669067,0.09812726,0.29539806,-0.41506854,-0.0894746,0.449809,-0.41588032,0.21078336,0.21998166,0.1657555,0.65580046,-0.27161247,-0.42289332,-0.22973278,-0.002085939,0.03340613,0.33975387,0.2519685,-0.65401447,-0.3135656,0.18343689,-0.16280943,-0.63404334,-0.2532572,-0.5154032,-0.29846618,0.13091974,-0.5723123,1.7540758,-0.2516289,0.5001423,0.5864582,-0.49066815,0.44886863,0.10578353,0.043485984,0.037161622,0.25955686,-0.6780319,-0.35417137,0.6433767,-0.31046656,-0.2652391,0.50380147,-0.62153196,-0.42364526,0.12203711,-0.37900743,0.24387401,-0.792427,0.24062955,0.4662064,-0.092005745,-2.0881147,-0.36036187,0.18953335,0.49662542,-0.276349,-0.44726864,0.291838,0.084612824,0.6408339,-0.5047475,1.4852139,0.23438083,0.47312528,-0.33417103,-0.14051145,0.47602528,-0.7737745,0.42505205,-0.019617036,-0.8139298,0.081027895,0.2964897,1.6479142,0.24693105,0.15317336,-0.23394366,0.23547044,-0.68164,-0.83325183,0.6908804,0.45223397,-0.29959628,0.7482748,0.10246009,-0.45700386,0.833478,0.6812027,-0.022176523,0.14007547,0.02512988,1.717112,-0.13829206,-0.3308618,-0.11700878,0.034402616,-0.06205567,0.41251123,-0.37448704,-0.51130646,0.50452715,-0.09301648,-0.025170662,-0.45782894,0.4348162,-0.20012172,0.2772704,0.11561397,-0.1768729,0.6666684,0.8103214,-0.18536298,-0.13767517,-0.47929958,-1.2009083,-0.51076394],"result":{"type":"object","properties":{"papers":{"items":{"properties":{"abstract":{"type":"string"},"authors":{"items":{"type":"string"},"type":"array"},"categories":{"items":{"type":"string"},"type":"array"},"id":{"type":"string"},"pdf_url":{"type":"string"},"published":{"type":"string"},"title":{"type":"string"}},"type":"object"},"type":"array"},"total_results":{"type":"number"}},"required":["papers","total_results"]},"sql_tables":null,"sql_queries":null,"file_inbox":null,"oauth":null,"assets":null,"runner":"any","operating_system":["linux","macos","windows"],"tool_set":""},false]}