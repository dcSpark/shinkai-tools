{"type":"Python","content":[{"version":"1.0.0","name":"PubMed Search","homepage":null,"author":"@@official.shinkai","py_code":"# /// script\n# requires-python = \">=3.10,<3.12\"\n# dependencies = [\n#   \"biopython==1.81\",\n#   \"requests>=2.31.0\"\n# ]\n# ///\n\nimport os\nimport asyncio\nfrom typing import Optional\nfrom Bio import Entrez\n\nclass CONFIG:\n    entrez_email: Optional[str] = None\n\nclass INPUTS:\n    query: str\n    max_results: int = 15\n\nclass OUTPUT:\n    status: str\n    query: str\n    message: str\n    total_results: int\n    showing: int\n    records: str\n\nasync def run(c: CONFIG, p: INPUTS) -> OUTPUT:\n    \"\"\"\n    Searches PubMed for the specified query using the Entrez API, returning MEDLINE text records.\n\n    Args:\n        c: Configuration object. \n           `entrez_email` can be provided here or in environment var `ENTREZ_EMAIL`.\n        p: Input parameters including 'query' and optionally 'max_results'.\n\n    Returns:\n        OUTPUT: The search result in a structured format.\n    \"\"\"\n    # Determine the email from config or environment\n    email = c.entrez_email or os.getenv(\"ENTREZ_EMAIL\")\n    if not email:\n        raise ValueError(\"No Entrez email provided. Either set `ENTREZ_EMAIL` env var or pass it in the configuration.\")\n\n    # Configure Entrez\n    Entrez.email = email\n\n    if not p.query.strip():\n        raise ValueError(\"Query string cannot be empty.\")\n\n    max_results = max(1, min(p.max_results, 15))\n\n    try:\n        # Search for IDs\n        handle = Entrez.esearch(\n            db=\"pubmed\",\n            term=p.query,\n            retmax=max_results\n        )\n        results = Entrez.read(handle)\n        handle.close()\n\n        # If no results found\n        if not results.get(\"IdList\"):\n            out = OUTPUT()\n            out.status = \"no_results\"\n            out.query = p.query\n            out.message = f\"No results found for '{p.query}'\"\n            out.total_results = 0\n            out.showing = 0\n            out.records = \"\"\n            return out\n\n        id_list = results[\"IdList\"]\n        id_string = \",\".join(id_list)\n        total = int(results.get(\"Count\", \"0\"))\n\n        # Fetch MEDLINE records\n        fetch_handle = Entrez.efetch(\n            db=\"pubmed\",\n            id=id_string,\n            rettype=\"medline\",\n            retmode=\"text\"\n        )\n        medline_data = fetch_handle.read()\n        fetch_handle.close()\n\n        out = OUTPUT()\n        out.status = \"success\"\n        out.query = p.query\n        out.message = \"OK\"\n        out.total_results = total\n        out.showing = len(id_list)\n        out.records = medline_data\n        return out\n\n    except Exception as e:\n        out = OUTPUT()\n        out.status = \"error\"\n        out.query = p.query\n        out.message = str(e)\n        out.total_results = 0\n        out.showing = 0\n        out.records = \"\"\n        return out ","tools":[],"config":[{"BasicConfig":{"key_name":"entrez_email","description":"Email address for Entrez usage. If not provided, must be set in the environment variable ENTREZ_EMAIL.","required":false,"type":null,"key_value":null}}],"description":"Search PubMed for scientific/medical literature and return MEDLINE records.","keywords":["pubmed","literature","medical","shinkai"],"input_args":{"type":"object","properties":{"query":{"type":"string","description":"Search query for PubMed"},"max_results":{"type":"number","description":"Maximum results to fetch (1-15)"}},"required":["query"]},"output_arg":{"json":""},"activated":false,"embedding":[0.42287254,0.14418541,0.39382425,0.19136608,-0.10115671,-0.017267719,-0.645198,0.10767785,0.074523024,-0.11240621,-0.31325313,0.21125428,-0.12606557,0.106575064,0.43942195,-0.12509221,0.16517328,-0.39841792,-1.7468932,-0.40920013,0.11973749,0.83024734,0.082701705,0.011028614,0.52299225,-0.59874165,-0.5845523,-0.070943065,-0.86555606,-2.0204248,-0.08858863,0.66802853,-0.23337483,-0.3897573,-0.04443235,-0.19875354,0.38242006,0.26826787,-0.5715916,0.3248213,-0.09542237,0.03491488,-0.04191147,0.29082087,-0.07964273,-0.31520545,0.14868891,-0.15794224,1.1190066,0.7877635,-0.757497,-0.6880208,0.2009501,0.3094522,-0.70439565,0.16924092,-0.42154366,-0.043960832,0.2987297,-0.15170023,-0.35882163,0.33653682,-4.343428,-0.13922976,0.48153055,0.41607675,0.087837666,-0.18995832,0.1421725,-0.24263725,0.43224192,-0.04763233,0.5013487,0.017519137,-0.11304875,-0.78227234,0.43444854,-0.34206915,0.9943632,-0.48973957,-0.55897474,0.29250973,-0.7762408,-0.33640006,-0.674592,0.31305504,-0.6451073,0.25436613,-0.027146287,0.01932168,-0.30617473,-0.40895697,0.41412234,0.26303574,0.16507843,0.45629817,-0.04847672,0.5780311,0.5877682,2.9911737,0.6628234,0.31280324,0.4941788,-0.13375969,0.015152715,-0.5143994,0.3791056,-0.68585765,0.4472597,0.3583752,-0.31695732,0.16593754,0.3552094,-0.16177058,0.40669382,0.17669845,-0.45809793,0.23094717,0.013588669,0.12971419,-0.8781829,0.1106147,0.16561136,0.032631412,-0.06775081,0.51460385,-0.015566554,0.19928,0.26426247,-0.38969597,0.33634585,0.36745623,-1.094358,0.15647505,-0.56284696,0.2539812,0.73360145,-0.3509976,-0.067177646,-0.9725887,-0.051462084,-1.2720784,1.1224049,0.69341624,1.1243455,0.32692596,-0.8393147,0.002916798,-0.2955067,-0.36419946,-0.23765577,0.6739243,0.16704771,0.08991717,0.76762396,0.17117792,-0.39238364,-0.15065265,0.022154711,0.027448606,-0.73390955,-0.08161501,0.7689133,0.9975988,0.08697879,-0.08273414,0.37417167,0.23485252,0.4782478,0.08480345,-0.1983163,-0.230472,0.5234274,0.1142416,-0.45246467,0.46503004,-0.1453919,-0.37806576,-0.062287156,-0.61079836,0.15849254,0.9380077,0.10516998,0.099032916,-0.31929964,0.22732787,0.29239684,-0.1313498,0.78911054,1.1916589,-0.60946006,1.1803484,-0.7555431,-0.39422816,0.22326684,0.09230094,-0.20639203,0.22839195,0.45837888,0.100465044,0.06195392,0.14733885,-0.024043877,0.016411923,-0.28320992,-0.14908323,-0.032615468,-0.77487606,0.477499,-0.47357997,-0.10411364,-0.038936496,0.21848345,0.5151138,0.35541794,0.5105488,0.24702734,-0.2970642,0.22342162,0.7390083,-0.093881495,0.446098,-0.3230132,-0.599196,-0.20671585,0.19482134,0.10111611,-0.4631269,-0.18444246,-0.19468138,0.45552242,1.1143878,0.18842642,0.3709875,0.82992536,0.07216382,0.7553524,-0.550539,0.7110903,-0.25004417,-0.114068575,0.016969375,-0.57032454,-0.25772947,0.2919588,-0.14814648,0.4428165,0.41815698,0.29616955,1.4094093,0.9274779,-0.04822192,0.2584105,-0.03561155,0.14916575,0.17050534,-1.2409911,-0.5062135,-0.4697037,0.9140423,0.21803749,-0.101982445,0.4644452,0.28854337,0.0040963017,-0.1398897,-0.82290095,-0.6208919,0.25163704,-0.22825664,-0.36557883,0.22814822,-0.07330379,0.22336769,0.13571765,-0.32156578,0.33499837,-0.009091087,-0.6905141,-0.7373235,0.19412935,-0.2708506,0.075177535,0.38845038,-0.7423688,0.3239188,0.075307876,-0.04884509,-0.6773249,-0.028809953,-0.4430679,-0.1254834,-0.5157657,0.28860372,2.0672703,-0.07211988,0.5363918,0.5908409,-0.61836445,0.42468345,-0.026731685,-0.6867565,-0.1257844,0.7694463,0.00888896,-0.5734436,0.43661892,-0.060128585,-0.1903053,0.06377015,-0.18279219,-0.13386685,0.3960581,-0.31013906,0.3529587,-1.0497417,-0.008116804,-0.07143116,-0.26111826,-2.393786,0.14053144,0.15428028,0.37894124,-0.34794164,-0.68739676,0.27265492,-1.0432489,0.041785147,-0.5165701,0.9746275,-0.13513431,-0.48354033,-0.22227956,-0.2667065,0.2555664,-0.7993759,0.10965007,-0.18347791,-1.1065326,-0.17398606,-0.07003228,1.7570441,0.5532648,0.5323333,0.23186222,0.029774986,-0.903963,-0.6674419,0.1808587,0.5159739,-0.19995095,0.46029365,0.12841025,-0.12183698,0.38964543,1.1465495,0.08809014,0.2880001,-0.056895737,1.8331585,-0.09879872,-0.16555063,-0.65046465,-0.066619396,-0.09779206,0.23480223,-0.06957696,-0.44049117,0.35933417,0.038461175,0.36280918,-0.91879064,0.14297661,0.07390069,0.16955319,0.66154975,0.2800634,0.92832625,0.3304367,0.07262896,0.0054128766,-0.80219954,-0.53812516,0.28522253],"result":{"type":"object","properties":{"message":{"type":"string"},"query":{"type":"string"},"records":{"type":"string"},"showing":{"type":"number"},"status":{"type":"string"},"total_results":{"type":"number"}},"required":["status","query"]},"sql_tables":null,"sql_queries":null,"file_inbox":null,"oauth":null,"assets":null,"runner":"any","operating_system":["linux","macos","windows"],"tool_set":""},false]}