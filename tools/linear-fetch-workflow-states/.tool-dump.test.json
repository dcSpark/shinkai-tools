{"type":"Deno","content":[{"name":"Linear Fetch Workflow States","tool_router_key":"local:::__official_shinkai:::linear_fetch_workflow_states","homepage":null,"author":"@@official.shinkai","version":"1.0.0","mcp_enabled":null,"js_code":"import { LinearClient } from \"npm:@linear/sdk\";\n\nexport type CONFIG = {\n  LINEAR_API_KEY: string;\n};\n\nexport type INPUTS = {\n  teamId?: string; // Optional team ID to filter workflow states\n};\n\nexport type OUTPUT = {\n  workflowStates: {\n    id: string;\n    name: string;\n    type: string;\n    team?: {\n      id: string;\n      name: string;\n    };\n  }[];\n  lastSyncId: number;\n  success: boolean;\n};\n\nexport async function run(config: CONFIG, inputs: INPUTS): Promise<OUTPUT> {\n  // Validate required config\n  if (!config.LINEAR_API_KEY) {\n    throw new Error(\"Missing LINEAR_API_KEY in config\");\n  }\n\n  // Initialize Linear client with API key\n  const linearClient = new LinearClient({\n    apiKey: config.LINEAR_API_KEY,\n  });\n\n  try {\n    // Define the GraphQL query to fetch workflow states with optional filtering by team ID\n    const query = inputs.teamId \n      ? `\n      query {\n        workflowStates(filter: { team: { id: { eq: \"${inputs.teamId}\" } } }) {\n          nodes {\n            id\n            name\n            type\n            team {\n              id\n              name\n            }\n          }\n        }\n      }\n      `\n      : `\n      query {\n        workflowStates {\n          nodes {\n            id\n            name\n            type\n            team {\n              id\n              name\n            }\n          }\n        }\n      }\n      `;\n\n    // Execute the raw GraphQL query\n    const response = await linearClient.client.rawRequest(query);\n\n    if (response.errors) {\n      console.error(\"GraphQL Errors:\", response.errors);\n      return {\n        workflowStates: [],\n        lastSyncId: Date.now(),\n        success: false,\n      };\n    }\n\n    // Format the output\n    const formattedWorkflowStates = (response.data as any).workflowStates.nodes.map((state: any) => ({\n      id: state.id,\n      name: state.name,\n      type: state.type,\n      team: state.team ? { id: state.team.id, name: state.team.name } : undefined,\n    }));\n\n    return {\n      workflowStates: formattedWorkflowStates,\n      lastSyncId: Date.now(),\n      success: true,\n    };\n  } catch (error) {\n    console.error(\"Error fetching workflow states:\", error);\n    return {\n      workflowStates: [],\n      lastSyncId: Date.now(),\n      success: false,\n    };\n  }\n}","tools":[],"config":[{"BasicConfig":{"key_name":"LINEAR_API_KEY","description":"The API key for Linear","required":true,"type":null,"key_value":null}}],"description":"Fetches workflow states for all Teams or for a specific team using Linear API.","keywords":["linear","workflow","API","fetch"],"input_args":{"type":"object","properties":{"teamId":{"type":"string","description":"Optional team ID to filter workflow states"}},"required":[]},"output_arg":{"json":""},"activated":false,"embedding":[0.067117766,-0.2600268,0.48433343,0.61400145,0.12081334,-0.5049727,-0.30133426,0.05318056,0.50615674,0.09872924,-0.00032848585,0.37394023,-0.3257619,0.4011842,0.5977557,0.21252859,-0.36440763,-1.1958236,-1.9843187,-0.36410552,0.79519033,0.36004636,0.27303943,0.07397552,-0.39481702,0.34852928,0.20648022,-0.5012031,-1.2337939,-2.327617,0.4715799,0.110137686,0.34421358,-0.5616462,-0.040695883,-0.9899156,-0.192228,-0.24287361,-0.6443046,0.0445074,-0.42594984,-0.45773813,-0.11939764,0.52175945,0.38185892,-0.12832835,-0.058131233,-0.26899937,-0.07919077,0.46024966,0.53259623,0.10771194,0.013893291,-0.13970767,-0.40881345,-0.48180798,-0.18810871,-0.24837069,-0.22160128,-0.64959514,0.59590524,0.53479624,-2.765364,0.67546594,-0.112082794,-0.06658926,-0.1316722,0.38610595,0.076897524,-0.02097375,0.17466106,-0.39852333,0.047185503,0.4565908,0.107328005,-0.6434241,-0.028989706,-0.07467084,0.42490435,0.15250605,0.5753057,1.1457815,-0.1182814,0.0880425,-0.6277917,0.8190216,-0.3281978,-0.08817701,0.3552101,-0.06916624,-0.29266274,0.15049975,0.2495032,-0.47142813,-0.41872612,0.06862354,-0.16979444,0.35352468,0.46051815,3.1725202,0.36022747,0.2684946,0.01290106,-0.6308649,-0.017110802,-0.12298525,-0.56593543,-0.13547672,-0.16414857,-0.3098376,0.26368603,-0.07567449,0.19058147,0.48152766,0.22597715,-0.30743203,0.14063965,0.29302362,-0.27034652,0.59437865,-0.17292935,0.010703831,-0.09460972,-0.6418462,-0.13226199,0.03071846,-0.33276045,0.47133204,0.46330568,-0.24761696,0.5082948,-0.7406616,-0.86832166,-0.051786207,0.1547614,0.4744612,-0.22162403,-0.32468933,-0.19893858,-1.4166111,-0.14405933,-1.0767832,0.4882478,-0.88623524,0.44383222,0.40887547,0.3750421,0.7246067,-0.47574168,0.29062486,0.042945705,0.71755576,-0.42991844,-0.4003768,0.7240489,0.31503,0.13895337,-0.9898788,-1.3353422,0.28923896,-0.05302478,0.09696456,0.45886979,-0.49851543,0.40803185,-0.15989667,0.19187184,-0.1325911,0.61021876,0.035436984,0.8476472,-0.0614774,-0.36553425,0.8115183,-0.55107707,0.6690429,-0.02610629,0.020965599,0.34078753,-0.47959834,1.0686125,0.8334959,0.6101802,-0.92989635,-0.3033324,0.5050219,0.106249176,0.33781716,0.48048818,0.85988116,-1.2034879,1.1557897,-0.9476319,-0.1465748,0.26934648,-0.7070141,0.055311784,0.26656204,0.14766595,0.061568804,-1.0145594,-0.9457106,-0.25879684,-0.35820642,-0.09530061,0.18890578,0.45986864,-0.5293533,0.38986075,-1.0215054,-0.13044044,-0.331169,0.49177638,-0.26971406,0.2553727,-0.04220829,-0.2861508,-0.059052873,-0.26631778,0.36503887,0.26511258,0.5971505,-0.62091166,-0.70662916,-0.30752367,-0.48928934,-0.28157225,0.5591944,0.0942712,-0.70368713,0.97468543,0.8617228,0.4412487,0.923343,0.93918234,0.3002879,-1.3999329,0.9232234,-0.20390154,-0.3181679,0.72701645,-0.1786044,0.069175795,0.41667247,0.2162603,-0.09236337,0.0046765283,-0.5491491,-0.26002696,2.2095861,1.0870186,0.0074900687,0.24573253,0.40894347,0.26094484,-0.19788557,-1.3913488,-0.26351327,-0.46463796,0.79524106,-0.28868347,0.46024495,0.82199645,0.25401288,-0.011003801,0.14215429,-0.42703167,-0.40197256,-0.027218204,0.2492134,-0.67471015,-0.1755343,-1.128809,-0.4633978,-0.081320375,-0.14754477,-0.25449544,0.4347316,-0.4926992,-0.47235882,0.4695673,-0.020411067,0.20309845,-0.29371494,0.04895152,-0.7026187,-0.44363475,0.105581544,-0.5092639,0.41419655,-0.2974687,-1.0348642,-1.6276673,0.4638075,1.2291877,0.14311466,0.1838064,0.6452374,0.19415107,0.22547454,-0.43053645,0.09485935,0.25361624,-0.2341679,-1.1946325,0.101572715,0.53230226,-0.11440863,-0.5854234,0.3709785,-0.25355414,0.984433,0.62809974,-0.11962928,0.2516387,-0.461111,0.011308115,1.0703484,0.27978984,-1.7703366,-0.16415742,0.4662394,-0.013831377,-0.06102626,-0.71086365,-0.13015595,-0.5557626,-0.32301462,-0.03033299,0.8342345,0.21619618,0.24302892,-0.5886924,0.091495596,0.71895134,0.19408408,-0.22103626,0.5148648,-0.0053602755,-0.6711352,-0.1052753,1.1977179,0.3401198,0.21702617,0.004213486,0.34225342,-0.38541305,-1.0951296,0.6321256,-0.27741975,0.031065775,0.8938966,0.76440513,-0.42258143,0.795252,1.1311578,0.033897433,-0.2007645,-0.6455905,1.3180672,-0.16668612,0.4148816,-0.15571031,0.23935534,-0.11052219,0.70321435,0.038725752,0.030892007,-0.04645416,-0.010281779,-0.15500711,0.14111155,-0.5107434,0.6117729,0.51791996,0.52973527,0.57359034,0.90181863,0.19811855,0.06890941,0.62532485,0.45958903,-0.4985703,0.20813876],"result":{"type":"object","properties":{"lastSyncId":{"description":"The timestamp of the last sync","type":"number"},"success":{"description":"Indicates if the fetching was successful","type":"boolean"},"workflowStates":{"description":"The list of workflow states","items":{"properties":{"id":{"description":"The ID of the workflow state","type":"string"},"name":{"description":"The name of the workflow state","type":"string"},"team":{"properties":{"id":{"description":"The ID of the team","type":"string"},"name":{"description":"The name of the team","type":"string"}},"required":[],"type":"object"},"type":{"description":"The type of the workflow state","type":"string"}},"required":["id","name","type"],"type":"object"},"type":"array"}},"required":["workflowStates","lastSyncId","success"]},"sql_tables":null,"sql_queries":null,"file_inbox":null,"oauth":[],"assets":null,"runner":"any","operating_system":["linux","macos","windows"],"tool_set":"linear_app"},false]}