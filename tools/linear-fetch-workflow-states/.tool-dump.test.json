{"type":"Deno","content":[{"name":"Linear Fetch Workflow States","tool_router_key":"local:::__official_shinkai:::linear_fetch_workflow_states","homepage":null,"author":"@@official.shinkai","version":"1.0.0","mcp_enabled":null,"js_code":"import { LinearClient } from \"npm:@linear/sdk\";\n\nexport type CONFIG = {\n  LINEAR_API_KEY: string;\n};\n\nexport type INPUTS = {\n  teamId?: string; // Optional team ID to filter workflow states\n};\n\nexport type OUTPUT = {\n  workflowStates: {\n    id: string;\n    name: string;\n    type: string;\n    team?: {\n      id: string;\n      name: string;\n    };\n  }[];\n  lastSyncId: number;\n  success: boolean;\n};\n\nexport async function run(config: CONFIG, inputs: INPUTS): Promise<OUTPUT> {\n  // Validate required config\n  if (!config.LINEAR_API_KEY) {\n    throw new Error(\"Missing LINEAR_API_KEY in config\");\n  }\n\n  // Initialize Linear client with API key\n  const linearClient = new LinearClient({\n    apiKey: config.LINEAR_API_KEY,\n  });\n\n  try {\n    // Define the GraphQL query to fetch workflow states with optional filtering by team ID\n    const query = inputs.teamId \n      ? `\n      query {\n        workflowStates(filter: { team: { id: { eq: \"${inputs.teamId}\" } } }) {\n          nodes {\n            id\n            name\n            type\n            team {\n              id\n              name\n            }\n          }\n        }\n      }\n      `\n      : `\n      query {\n        workflowStates {\n          nodes {\n            id\n            name\n            type\n            team {\n              id\n              name\n            }\n          }\n        }\n      }\n      `;\n\n    // Execute the raw GraphQL query\n    const response = await linearClient.client.rawRequest(query);\n\n    if (response.errors) {\n      console.error(\"GraphQL Errors:\", response.errors);\n      return {\n        workflowStates: [],\n        lastSyncId: Date.now(),\n        success: false,\n      };\n    }\n\n    // Format the output\n    const formattedWorkflowStates = (response.data as any).workflowStates.nodes.map((state: any) => ({\n      id: state.id,\n      name: state.name,\n      type: state.type,\n      team: state.team ? { id: state.team.id, name: state.team.name } : undefined,\n    }));\n\n    return {\n      workflowStates: formattedWorkflowStates,\n      lastSyncId: Date.now(),\n      success: true,\n    };\n  } catch (error) {\n    console.error(\"Error fetching workflow states:\", error);\n    return {\n      workflowStates: [],\n      lastSyncId: Date.now(),\n      success: false,\n    };\n  }\n}","tools":[],"config":[{"BasicConfig":{"key_name":"LINEAR_API_KEY","description":"The API key for Linear","required":true,"type":null,"key_value":null}}],"description":"Fetches workflow states for all Teams or for a specific team using Linear API.","keywords":["linear","workflow","API","fetch"],"input_args":{"type":"object","properties":{"teamId":{"type":"string","description":"Optional team ID to filter workflow states"}},"required":[]},"output_arg":{"json":""},"activated":false,"embedding":[0.067071356,-0.25968665,0.48436493,0.6136879,0.12068117,-0.5052265,-0.30135557,0.053064093,0.5058724,0.09876052,-0.00038650818,0.3737543,-0.3255074,0.40118307,0.5978877,0.21266311,-0.3640866,-1.1959922,-1.9845543,-0.36413756,0.79533076,0.3599195,0.27296558,0.07423895,-0.39472073,0.34849137,0.20635796,-0.5013726,-1.2341118,-2.327614,0.4714632,0.11018833,0.34412903,-0.56161577,-0.0404365,-0.99011624,-0.19209163,-0.24281102,-0.6443052,0.044595495,-0.42600518,-0.4578566,-0.11941102,0.52181154,0.3817881,-0.1282832,-0.057995044,-0.26879507,-0.0794199,0.4603266,0.5324462,0.10774731,0.013778668,-0.13945998,-0.40894425,-0.4818703,-0.18808444,-0.24832907,-0.22164813,-0.6496864,0.59592867,0.53484374,-2.7655365,0.6755347,-0.1120919,-0.06672583,-0.1314962,0.3862125,0.07706347,-0.021054529,0.17478992,-0.39850995,0.047056906,0.4565514,0.1070585,-0.64330715,-0.028824177,-0.074604794,0.42496026,0.1521745,0.5755015,1.1458908,-0.11820284,0.0880809,-0.6277191,0.8190812,-0.3282213,-0.08825523,0.355172,-0.069223404,-0.29252338,0.15058859,0.24920973,-0.4713434,-0.4186993,0.068685494,-0.16979365,0.35351273,0.46046576,3.1726763,0.3602066,0.26852965,0.012666896,-0.6308585,-0.017305627,-0.123091705,-0.56571984,-0.13567877,-0.16396296,-0.30980003,0.26364645,-0.07568385,0.19062428,0.4813998,0.22600178,-0.30734628,0.1407132,0.2931281,-0.27055243,0.59425706,-0.17298703,0.010759302,-0.09467023,-0.64173156,-0.13252875,0.030424476,-0.3327898,0.47133225,0.46356288,-0.24769025,0.50823015,-0.7406172,-0.86815697,-0.05165039,0.15474719,0.4744832,-0.22181515,-0.32471278,-0.19904548,-1.416732,-0.1440526,-1.0770173,0.4884712,-0.8861706,0.44376835,0.408929,0.37501073,0.72464097,-0.47578514,0.2909478,0.04313304,0.71766174,-0.4297591,-0.40026495,0.7238964,0.31500354,0.1385656,-0.9899578,-1.3352274,0.28905997,-0.053107306,0.09696978,0.4589528,-0.49841797,0.40804198,-0.15962835,0.19206552,-0.1326549,0.61027354,0.035398766,0.84756017,-0.061501957,-0.36538953,0.81140965,-0.55098337,0.66902995,-0.026122294,0.020797923,0.34073532,-0.4795131,1.0689284,0.8332796,0.6103573,-0.9297976,-0.30319384,0.505009,0.1065068,0.33777133,0.4803681,0.859949,-1.2033818,1.15595,-0.9475849,-0.14668936,0.2692174,-0.7072251,0.055425063,0.2665729,0.14779487,0.061445802,-1.0145638,-0.9458921,-0.25877106,-0.35831165,-0.0954724,0.18872541,0.4597136,-0.52915305,0.38988882,-1.0215415,-0.13046035,-0.3308895,0.49160603,-0.2695167,0.25553584,-0.042414397,-0.2861687,-0.059035014,-0.2662492,0.36521643,0.26494306,0.5970218,-0.6209777,-0.70666116,-0.3076684,-0.48921883,-0.28161454,0.5590766,0.094235316,-0.70358163,0.9747656,0.86176485,0.44138974,0.9233739,0.939429,0.30001476,-1.399924,0.9232621,-0.20395313,-0.31793672,0.7270228,-0.17868409,0.068916425,0.4168831,0.21627735,-0.092260614,0.0045724884,-0.54911524,-0.25986034,2.2096617,1.0866842,0.0072679147,0.2457917,0.40898064,0.26104918,-0.19758222,-1.3912512,-0.26334685,-0.46460402,0.79533,-0.28855672,0.4605869,0.8219936,0.25375295,-0.01101633,0.1423157,-0.4268881,-0.40184742,-0.02739584,0.24893516,-0.6746353,-0.17528127,-1.128967,-0.46340787,-0.08115148,-0.14744084,-0.2542336,0.43454677,-0.4926873,-0.4723574,0.46974018,-0.020276193,0.20313263,-0.29392952,0.049029976,-0.7025184,-0.44390658,0.10576369,-0.50930196,0.41430777,-0.29734588,-1.0349069,-1.6274251,0.46376884,1.22935,0.14316583,0.18365869,0.6450179,0.19417596,0.22549078,-0.43054736,0.094838604,0.25349694,-0.23423061,-1.1948419,0.1015267,0.5321621,-0.11440867,-0.58519286,0.37094998,-0.25348148,0.98434967,0.62805605,-0.119974986,0.25170016,-0.46087322,0.011178181,1.0701313,0.27983868,-1.7702245,-0.16394283,0.46625245,-0.013635546,-0.06104894,-0.71096885,-0.12993494,-0.55582076,-0.32320005,-0.030373171,0.8342122,0.21625024,0.24288906,-0.58872384,0.0913937,0.71895826,0.1939802,-0.22089846,0.5150439,-0.0054606944,-0.67099786,-0.10527605,1.1976233,0.3400216,0.21701151,0.004280135,0.34228593,-0.38544846,-1.0951638,0.6322017,-0.2776171,0.031002153,0.8938801,0.76433635,-0.42241374,0.79541427,1.1311218,0.03380085,-0.20064794,-0.64542675,1.3180757,-0.16679016,0.4149137,-0.15564783,0.23929788,-0.11046141,0.70299715,0.03883693,0.03087923,-0.04645728,-0.010310248,-0.15507264,0.14103088,-0.5104264,0.6116855,0.5177262,0.52970046,0.57355917,0.90149164,0.19791578,0.06905238,0.6253343,0.45938566,-0.49869585,0.20827119],"result":{"type":"object","properties":{"lastSyncId":{"description":"The timestamp of the last sync","type":"number"},"success":{"description":"Indicates if the fetching was successful","type":"boolean"},"workflowStates":{"description":"The list of workflow states","items":{"properties":{"id":{"description":"The ID of the workflow state","type":"string"},"name":{"description":"The name of the workflow state","type":"string"},"team":{"properties":{"id":{"description":"The ID of the team","type":"string"},"name":{"description":"The name of the team","type":"string"}},"required":[],"type":"object"},"type":{"description":"The type of the workflow state","type":"string"}},"required":["id","name","type"],"type":"object"},"type":"array"}},"required":["workflowStates","lastSyncId","success"]},"sql_tables":null,"sql_queries":null,"file_inbox":null,"oauth":[],"assets":null,"runner":"any","operating_system":["linux","macos","windows"],"tool_set":"linear_app"},false]}