{"type":"Deno","content":[{"name":"Wikimedia Featured Content","homepage":null,"author":"@@official.shinkai","version":"1.0.0","js_code":"import axios from 'npm:axios';\n\ntype Configurations = {\n  project?: string;\n  language?: string;\n};\n\ntype Parameters = {\n  date?: string;\n};\n\ntype Result = {\n  featured: {\n    tfa: {\n      title: string;\n      extract: string;\n      url: string;\n    };\n    image: {\n      title: string;\n      description: string;\n      url: string;\n    };\n    news: Array<{\n      story: string;\n      links: Array<{\n        title: string;\n        url: string;\n      }>;\n    }>;\n  };\n};\n\nexport type Run<C extends Record<string, any>, I extends Record<string, any>, R extends Record<string, any>> = (\n  config: C,\n  inputs: I\n) => Promise<R>;\n\nexport const run: Run<Configurations, Parameters, Result> = async (\n  configurations: Configurations,\n  params: Parameters\n): Promise<Result> => {\n  try {\n    const project = configurations?.project || 'wikipedia';\n    const language = configurations?.language || 'en';\n    \n    // Format date as YYYY/MM/DD\n    let date: string;\n    if (params.date) {\n      const d = new Date(params.date);\n      date = `${d.getFullYear()}/${String(d.getMonth() + 1).padStart(2, '0')}/${String(d.getDate()).padStart(2, '0')}`;\n    } else {\n      const d = new Date();\n      date = `${d.getFullYear()}/${String(d.getMonth() + 1).padStart(2, '0')}/${String(d.getDate()).padStart(2, '0')}`;\n    }\n    \n    const api_url = `https://api.wikimedia.org/feed/v1/${project}/${language}/featured/${date}`;\n    \n    const response = await axios.get(api_url, {\n      headers: {\n        'User-Agent': 'ShinkaiWikimediaFeaturedContent/1.0',\n        'Accept': 'application/json',\n        'Api-User-Agent': 'ShinkaiWikimediaFeaturedContent/1.0 (https://github.com/dcSpark/shinkai-tools)'\n      }\n    });\n\n    if (!response.data) {\n      throw new Error('No data received from Wikimedia API');\n    }\n\n    const { tfa, image, news } = response.data;\n\n    if (!tfa || !image) {\n      throw new Error('Required data missing from API response');\n    }\n\n    return {\n      featured: {\n        tfa: {\n          title: tfa.title,\n          extract: tfa.extract || tfa.description || '',\n          url: `https://${language}.${project}.org/wiki/${encodeURIComponent(tfa.title.replace(/ /g, '_'))}`\n        },\n        image: {\n          title: image.title,\n          description: image.description?.text || '',\n          url: image.image?.source || image.thumbnail?.source || ''\n        },\n        news: (news || []).map((item: any) => ({\n          story: item.story || '',\n          links: (item.links || []).map((link: any) => ({\n            title: link.title || '',\n            url: `https://${language}.${project}.org/wiki/${encodeURIComponent((link.title || '').replace(/ /g, '_'))}`\n          }))\n        }))\n      }\n    };\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      if (error.response?.status === 404) {\n        throw new Error(`No featured content found for the specified date`);\n      }\n      throw new Error(`Failed to fetch featured content: ${error.response?.data?.detail || error.response?.data?.message || error.message}`);\n    }\n    throw error;\n  }\n};\n","tools":[],"config":[{"BasicConfig":{"key_name":"project","description":"Wikimedia project (e.g., wikipedia)","required":false,"type":null,"key_value":null}},{"BasicConfig":{"key_name":"language","description":"Language code (e.g., en)","required":false,"type":null,"key_value":null}}],"description":"Get featured content including article, image, and news from Wikimedia","keywords":["wikimedia","featured","wikipedia","content","articles","images","news"],"input_args":{"type":"object","properties":{"date":{"type":"string","description":"Date in YYYY-MM-DD format (defaults to current date)"}},"required":[]},"output_arg":{"json":""},"activated":false,"embedding":[0.16675086,0.8144579,-0.16748136,0.037891887,-0.3141715,0.22720867,-0.6816715,-0.8007469,0.12333938,0.21770854,-0.25175345,0.77049285,0.38809696,0.19412799,0.59354335,-0.14533478,0.073843166,-0.08011785,-1.6460447,-0.2912044,0.4361014,0.7255781,0.43672115,-0.014674753,-0.08817795,-0.18982302,-0.09654112,-0.3917516,-0.72681284,-2.1091,0.37167695,0.2109251,-0.23811585,-0.24934208,0.23690644,-0.7340729,-0.3732443,0.10646153,-0.45064694,-0.26875132,0.15045512,0.12741527,-0.249805,0.14467376,-0.18960969,0.106430046,-0.18242572,-0.48207328,0.22030939,0.45766056,-0.4984881,-0.00052660005,-0.26459026,0.47294292,-0.49364546,0.33075017,0.15058866,0.09543204,-0.05637357,0.5656337,0.19877885,0.8722137,-4.2568817,-0.0020928942,0.6745487,0.17408063,-0.18314894,-0.28469348,-0.15454692,0.18792528,0.3441159,0.36829418,-0.12232092,0.1475243,-0.25286123,-0.46488464,0.255456,0.28901297,-0.11783008,-0.4970502,-0.05022913,0.44294924,-0.16965806,-0.066998124,-0.18737951,0.6717926,-0.31954324,-0.33945218,0.25146788,0.0150491595,0.09173,-0.24134214,0.5141012,-0.34919673,-0.7942079,0.38652557,-0.0464655,0.44493425,0.5497125,3.7841482,0.46520966,0.0767995,0.5589016,-0.4334725,0.41110063,-0.42901686,-0.17450257,0.0073893424,-0.19795223,0.07279343,-0.0385577,-0.4339226,-0.0258912,-0.114955336,0.0608413,0.6796208,-0.82110447,0.060829878,-0.09370835,0.18652545,-0.31084645,0.16069657,-0.5492466,0.053795744,-0.07215279,-0.25534782,0.13743648,0.31799576,-0.12743066,0.0070119295,0.3828453,-0.12295896,-0.9652744,0.044220462,0.029013975,-0.011992216,0.24796641,-0.21212773,0.17174068,-1.0547926,0.17004952,-1.1998204,0.6679298,-0.044618018,0.87146086,0.27853954,-0.06838888,0.34388748,-0.68757915,0.02603688,-0.20307456,0.33221453,0.065542,0.41644388,0.87294966,-0.29967713,0.013933599,-0.033873603,-0.63595957,0.37278414,0.20151003,-0.41105518,0.7227926,0.4085136,0.38256115,-0.21926813,0.44732213,0.057600915,0.57988775,-0.2971436,0.11012999,-0.2698975,0.48128688,0.4939244,0.18646811,-0.06365979,-0.40071368,-0.046436064,0.4232772,-0.64784133,0.30989322,0.6330342,-0.15190922,-0.6978815,-0.017334811,0.08768722,0.23817343,0.16730887,0.34607458,0.7632251,-0.54999465,1.602841,-0.7657728,-0.58243805,0.24646458,-0.05850288,-0.39748096,0.34960938,0.571962,0.25593993,-0.21222517,-0.13681604,0.015438803,0.02172736,-0.33454722,-0.31291765,0.30532762,-0.19573188,-0.27912122,-0.47423312,-0.103348315,0.07673055,0.42903677,0.15427506,0.5751482,0.28951508,-0.017259799,0.08466026,0.2825715,0.8106978,0.048234142,0.22583511,-0.38302284,-0.7297015,-0.50852084,0.124397,-0.5841472,-0.403688,-0.46751985,-0.019115694,0.20343181,0.8137919,-0.12792659,0.85761416,0.64970094,0.28727925,-0.069242366,0.3905379,0.3790316,-0.774892,0.84422374,-0.15724237,-0.22228655,-0.052729215,0.2604552,-1.1058794,-0.20952581,0.13507724,-0.06435503,1.6728845,0.5560152,-0.22878551,0.23213731,0.16965038,0.26158822,0.3718572,-1.3436728,-0.23315758,-0.7514166,0.4353371,-0.06738968,-0.26710874,-0.18598306,0.04974166,0.19541103,-0.31653637,-0.19104196,0.0046374835,-0.07785384,-0.5568931,-0.028088141,0.6166169,-0.22278586,0.35592481,0.13305955,-0.17292336,0.087739855,-0.16880411,-0.3830777,0.2155229,0.4782549,-0.34862304,0.42105395,0.23994045,-0.6052512,-0.3484998,-0.3533819,0.08742971,-0.4078765,0.3631273,-0.06966683,-0.07327925,-0.049272086,-0.24700212,1.9824425,-0.08442472,0.51349664,0.49994946,0.056583982,0.16731462,-0.5585598,0.169287,-0.31540218,0.07394947,-0.8241025,-0.44951662,0.05505301,-0.10192336,-0.30662513,0.19609563,-0.22327885,0.07555087,0.09266569,-0.1144273,0.1124426,-0.60068256,-0.15556785,0.026013628,-0.06057895,-2.5655046,-0.112124644,0.3174737,0.29626828,-0.26193637,-0.5919783,0.4453125,0.07592292,-0.047813725,-0.45867735,1.2645607,0.13128757,-0.037913352,-0.40872356,0.5020281,0.4605692,0.14104767,-0.06139788,-0.09968347,-1.1778632,-0.26350558,0.44169787,1.5367143,0.45257935,0.6874109,-0.10154097,0.5994628,-0.8718549,-1.3259885,0.3048879,0.07826182,0.075331606,0.77010316,-0.22876869,-0.46958885,0.30517226,0.57818615,-0.18283775,0.18898532,-0.325872,1.8274779,-0.2796632,0.028966844,-0.14132774,0.48787996,0.30637056,0.2919857,0.28479472,-0.28839773,0.30376846,0.07440913,0.03165935,-0.31966767,0.25158936,0.28065348,0.26985914,-0.10036445,0.3439311,0.3698172,0.564516,0.07331267,-0.15876365,-0.16148663,-0.84873605,0.18958873],"result":{"type":"object","properties":{"featured":{"properties":{"image":{"properties":{"description":{"type":"string"},"title":{"type":"string"},"url":{"type":"string"}},"type":"object"},"news":{"items":{"properties":{"links":{"items":{"properties":{"title":{"type":"string"},"url":{"type":"string"}},"type":"object"},"type":"array"},"story":{"type":"string"}},"type":"object"},"type":"array"},"tfa":{"properties":{"extract":{"type":"string"},"title":{"type":"string"},"url":{"type":"string"}},"type":"object"}},"required":["tfa","image","news"],"type":"object"}},"required":["featured"]},"sql_tables":null,"sql_queries":null,"file_inbox":null,"oauth":null,"assets":null,"runner":"any","operating_system":["linux","macos","windows"],"tool_set":""},false]}