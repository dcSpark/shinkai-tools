{"type":"Deno","content":[{"toolkit_name":"coinbase-get-transactions","name":"Coinbase Transactions Getter","author":"Shinkai","version":"1.0.0","js_code":"import { Coinbase, CoinbaseOptions } from 'npm:@coinbase/coinbase-sdk@0.0.16';\n\ntype Configurations = {\n  name: string;\n  privateKey: string;\n  walletId: string;\n};\ntype Parameters = {};\ntype Result = { tableCsv: string; rowsCount: number; columnsCount: number };\nexport type Run<C extends Record<string, any>, I extends Record<string, any>, R extends Record<string, any>> = (config: C, inputs: I) => Promise<R>;\n\nexport const run: Run<Configurations, Parameters, Result> = async (\n  configurations: Configurations,\n  _parameters: Parameters,\n): Promise<Result> => {\n  const coinbaseOptions: CoinbaseOptions = {\n    apiKeyName: configurations.name,\n    privateKey: configurations.privateKey,\n  };\n  const coinbase = new Coinbase(coinbaseOptions);\n  const user = await coinbase.getDefaultUser();\n\n  // Prioritize walletId from Params over Config\n  const walletId = configurations.walletId;\n\n  const wallet = await user.getWallet(walletId);\n  console.log(`Wallet retrieved: `, wallet.toString());\n\n  // Retrieve the list of balances for the wallet\n  const address = await wallet.getDefaultAddress();\n  const transactions = (await address?.listTransfers()) ?? [];\n\n  // Convert transactions to CSV format\n  const headers = [\n    'transferId',\n    'networkId',\n    'fromAddressId',\n    'destinationAddressId',\n    'assetId',\n    'amount',\n    'transactionHash',\n    'transactionLink',\n    'status',\n  ];\n  const rows = transactions.map((tx) => [\n    tx.getId(),\n    tx.getNetworkId(),\n    tx.getFromAddressId(),\n    tx.getDestinationAddressId(),\n    tx.getAssetId(),\n    tx.getAmount().toString(),\n    tx.getTransactionHash(),\n    tx.getTransactionLink(),\n    tx.getStatus(),\n  ]);\n  const tableCsv = [headers, ...rows].map((row) => row.join(';')).join('\\n');\n\n  return Promise.resolve({\n    tableCsv,\n    rowsCount: transactions.length,\n    columnsCount: headers.length,\n  });\n};\n","tools":[],"config":[{"BasicConfig":{"key_name":"name","description":"","required":true,"type":null,"key_value":null}},{"BasicConfig":{"key_name":"privateKey","description":"","required":true,"type":null,"key_value":null}},{"BasicConfig":{"key_name":"walletId","description":"","required":true,"type":null,"key_value":null}}],"description":"Tool for getting the transactions of a Coinbase wallet after restoring it","keywords":["coinbase","balance","shinkai"],"input_args":{"type":"object","properties":{},"required":[]},"output_arg":{"json":""},"activated":false,"embedding":[0.16925259,0.19336475,-0.3109297,-0.039204508,-0.13054809,-0.34281373,0.042999133,0.55347544,-0.1557864,-0.19078992,-0.24169588,0.16050482,-0.07783348,0.03402864,0.27587122,-0.4300525,0.06291229,-0.31605762,-1.3911097,0.30489752,0.4740519,0.83545697,-0.59563756,0.302229,-0.5362712,-0.19890837,-0.36951882,-0.042009443,-1.4895351,-2.2981503,0.1976608,1.2256205,-0.3871849,-0.20203742,-0.4412474,-0.24111533,0.06941593,0.33441943,-0.55429214,-0.49527937,0.058845058,0.46884236,-0.684995,-0.0112426225,0.04067769,-0.24195337,0.5260498,-0.48140416,0.2484336,0.6262324,0.0061545745,0.13629545,0.594229,-0.6498375,-0.06213381,-0.024935724,-0.08060902,-0.37224773,0.13439868,0.31999916,-0.03608239,0.0027501956,-4.02535,0.056213092,0.7044405,-0.15491644,0.36956802,0.44447035,-0.573741,0.5601373,-0.4608069,-0.32819134,-0.51722616,0.21799603,0.51517683,-0.15655679,0.7445531,0.36054525,0.39726555,-0.1972068,-0.055746485,0.948037,0.06723908,0.051220223,-0.5470468,0.39737868,-0.14596295,-0.46307644,0.24408227,0.2250982,0.21850787,0.23179495,0.07397965,-0.20215729,-0.26786885,-0.058684975,0.100640446,1.1255865,0.37955603,3.003583,0.6364159,0.70454,0.3449511,-0.783787,0.7464417,-0.5484832,-0.11802791,-0.23625429,0.46603435,-0.15890005,0.7391749,-0.3760193,0.7570015,0.28463024,0.1649248,0.10714777,-0.79222786,-0.034782384,-0.13381101,0.35152757,-0.46387595,0.27746758,-0.5403326,-0.14051175,-0.49187753,-0.27269116,-0.07913071,0.30645147,-0.15724663,-0.03861757,0.6580126,-0.6525049,-0.9734173,-0.007423454,0.0057444684,0.33180004,-0.15739943,-0.6685441,-0.62532794,-0.5481901,-0.07224342,-1.1472703,1.0721201,-0.1827153,0.15122741,-0.3352298,0.46748245,-0.3385545,-0.26504517,-0.10017018,-0.15581384,0.13035673,0.16592658,-0.11092252,0.5865137,-0.2662667,0.07384996,-0.28651136,-0.7367664,0.24822763,-0.21085498,-0.11118903,0.73593247,0.85091907,0.9836215,-0.7230869,0.5753839,0.20492187,0.31841344,-0.4341326,0.45453894,0.031533338,-0.107394956,0.021345347,-0.5059574,-0.05648998,-0.015153021,-0.26773927,0.01916881,-0.28712988,-0.9005168,0.562127,-0.6722366,-0.7458022,-0.03604183,0.16324425,0.24371967,-0.07625256,0.54241717,0.49677145,-0.72900534,1.8670322,-0.479501,0.11911194,-0.34157392,-0.22788636,-0.032269422,0.29448202,0.36847284,0.1312088,-0.2405462,0.113498315,-0.1389235,0.40899345,-0.6186118,-0.17319115,0.25173354,0.36724806,-0.3623917,-0.4949983,0.30823615,0.087303035,0.47603455,0.5068521,0.44679856,-0.14118029,0.5918366,-0.09932922,0.82454556,-0.023810968,0.7300393,0.37037715,-0.56222284,-0.54878527,-0.61380464,-0.19734882,0.49692428,0.5359911,0.062600285,0.109496295,0.017320544,0.47013986,0.50148237,0.38402793,1.4785789,0.29964286,-0.38948953,-0.06508373,0.11701274,-0.84249365,0.20711926,0.3408258,-0.3878427,-0.4466251,-0.20268774,-0.49308315,0.73473155,0.12266129,0.31830004,1.8686404,0.47210944,-0.22385243,0.6687528,-0.35555094,0.27971923,-0.13979477,-1.4279561,-0.06260148,-0.21564257,0.27409208,0.23448211,-0.14771119,0.17397054,0.28156644,0.2049909,-0.451668,-0.8093298,0.65968525,0.33277026,-0.2324273,0.06474328,1.376619,1.0473466,0.22885406,-0.53884,-0.19854085,0.3424329,0.1060681,-0.36822245,0.25285268,0.42234084,-0.34062836,0.89859575,0.3273117,0.43744135,-0.1265469,-0.056891445,0.22342396,-0.98753196,-0.2396236,-0.100594625,-0.77528757,-0.8034485,0.8871108,2.1022525,0.58989704,0.4520424,0.36766866,0.115321025,0.3877527,-0.31387237,0.82794565,-0.29245496,0.48306432,-1.0535579,-0.72926724,0.6384178,-0.63804954,-0.20296723,-0.13029386,0.09505867,0.55600166,0.23006043,0.41020006,0.15756688,-0.5267177,-0.52579707,0.39963287,-0.43876588,-2.097354,0.16948931,-0.65887713,-0.54331464,-0.24390483,0.0118664745,0.3423066,-0.2960305,0.25839934,-0.2573114,1.6646926,0.07939121,-0.9080276,-0.95527864,-0.12138058,1.0430968,0.32054827,0.15474294,-0.021429494,-0.39041814,0.001073323,-0.2588204,0.8949996,0.054565392,0.2298509,-0.28955892,-0.04975786,-0.40022087,-0.95158064,0.021978501,-0.48953414,-0.20269717,-0.2161554,0.2604083,-0.24258533,1.2542185,0.41163054,-0.4763426,-0.27171656,-0.43820408,1.1436303,0.090385795,-0.7019678,-0.45494652,-0.4181419,-0.07761314,-0.14312065,0.23557039,-0.3436189,-0.29927588,0.23723227,-0.021425545,-0.597897,0.0766636,-0.05515675,0.92934424,0.6106546,-0.013847895,0.6391535,0.6345254,-0.049954813,0.25116992,0.05438469,-0.701619,0.19964059],"result":{"type":"object","properties":{"columnsCount":{"type":"number"},"rowsCount":{"type":"number"},"tableCsv":{"type":"string"}},"required":["tableCsv","rowsCount","columnsCount"]},"sql_tables":null,"sql_queries":null,"file_inbox":null,"oauth":null,"assets":null},false]}